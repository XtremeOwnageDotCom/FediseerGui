@using FediseerGui.Components;
@using global::Fediseer;
<Modal @ref="modalRef">
    <ModalContent Centered>
        <ModalHeader>
            <ModalTitle>Endorse Instant</ModalTitle>
            <CloseButton />
        </ModalHeader>
        <ModalBody>
            <RequiresApiKey>
                <Field>
                    <FieldLabel>Domain</FieldLabel>
                    <TextEdit ReadOnly @bind-Text=instance.Domain />
                </Field>
                <ModalFooter>
                    <Button Color="Color.Secondary" Clicked="@HideModal">Cancel</Button>
                    <Button Color="Color.Primary" Clicked="@CreateGuarantee">Yes I Sure</Button>
                </ModalFooter>
            </RequiresApiKey>
        </ModalBody>
    </ModalContent>
</Modal>
@code {
    // reference to the modal component
    private Modal modalRef;
    InstanceDetails instance;

    [CascadingParameter]
    public LocalStorage keyComponent { get; set; }

    [CascadingParameter]
    public FediseerClient client { get; set; }

    public Task ShowModal(InstanceDetails instance)
    {
        this.instance = instance;
        return modalRef.Show();
    }

    public Task HideModal()
    {
        return modalRef.Hide();
    }

    private async Task CreateGuarantee()
    {
        var resp = await client.Put_endorsementsAsync(await keyComponent.GetValueAsync(), "GUI", null, instance.Domain);

        Console.WriteLine(resp.Result.Message);

        await HideModal();
    }
}